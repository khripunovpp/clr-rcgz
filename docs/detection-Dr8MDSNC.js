import"./modulepreload-polyfill-B5Qt9EMX.js";import{d as m}from"./data-DOjEFDS4.js";const d=document.getElementById("colorPicker"),C=document.getElementById("result"),a=document.getElementById("train"),i=document.getElementById("load"),c=["purple","green","blue","red","yellow","orange","gray"],p=window.location.hostname==="localhost";p||f();d.addEventListener("change",o=>{k()});a.addEventListener("click",o=>{i.disabled=!0,a.disabled=!0,x()});i.addEventListener("click",o=>{f()});function f(){i.disabled=!0,a.disabled=!0,M()}let l="#451345";d.value=l;document.body.style.backgroundColor=l;function k(){l=d.value,document.body.style.backgroundColor=l,u()}function I(o){return{r:parseInt(o.substring(1,3),16),g:parseInt(o.substring(3,5),16),b:parseInt(o.substring(5,7),16)}}function B(o){return o.map(e=>h(e))}function h(o){const{r:e,g:n,b:r}=o;return[e/255,n/255,r/255]}function L(o){return o.map(e=>{const{name:n}=e;return c.indexOf(n)})}let t=null;function u(){tf.tidy(()=>{const o=tf.tensor2d([h(I(l))]),n=t.predict(o).argMax(1).dataSync()[0],r=c[n];console.log({color:r}),C.textContent="The color is: "+r})}function x(){const o=B(m.data),e=L(m.data),n=tf.tensor2d(o),r=tf.tensor1d(e,"int32"),g=tf.oneHot(r,c.length);r.dispose(),console.log({colors:o,colorTensor:n,labelTensor:r,ys:g}),t=tf.sequential();const b=tf.layers.dense({units:16,activation:"sigmoid",inputShape:[3]}),y=tf.layers.dense({units:c.length,activation:"softmax"});t.add(b),t.add(y);const v=tf.train.sgd(.2);return t.compile({optimizer:v,loss:"categoricalCrossentropy"}),t.fit(n,g,{epochs:70,callbacks:{onEpochEnd:async(s,E)=>{console.log(`Epoch ${s}: loss = ${E.loss}`),u()},onBatchEnd:tf.nextFrame},validationSplit:.1,shuffle:!0}).then(s=>{console.log(s),console.log("Model trained")}).then(s=>t.save("localstorage://color-model").then(()=>t.save("downloads://color-model")).then(()=>{console.log("Model saved")}))}function M(){const o=p?"localstorage://color-model":"https://khripunovpp.github.io/clr-rcgz/color-model.json";return Promise.resolve().then(()=>tf.loadLayersModel(o)).then(e=>(console.log("Model loaded"),e.summary(),t=e,u(),e)).catch(e=>{})}
